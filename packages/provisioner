#!/bin/bash
# This deployment script has NOT been ravenously tested on:
# Centos 7, Ubuntu 17.10, Gentoo 17.1

packages="xauth"
# script revision
rev="1.8.2"
# enable debugging
#set -x

# Resources and objects
# function to pull data from github - should integrate the global profile function later
gitsource() {
  script=${1:-default.sh}
  gitsurl="https://raw.githubusercontent.com/silverelitez-${domain}/deploy/master/${script}"
  output=$(curl -f -s "${gitsurl}")
  [ ${?} == '0' ] || output="echo ERROR: curl returned ${?} for ${gitsurl}" && source <(echo "${output}")
}
# verify root access
is_sudo() {
  echo -n Check for sudo...
  if [[ ! ${SUDO_USER} ]]; then
    echo "Failed! Executing script as root..."
	[ ${debug} ] && echo ${0} ${@}
    sudo ${0} ${@} || exit 1
    exit
  else
    echo "Success as ${SUDO_USER}"
    # not sure why i declared this so many times but eh
    source /etc/os-release
  fi
}
# a function of pure brilliant laziness - quick install! manages universally installing packages after performing a quick test to see if it needs to be installed
q_install() {
  binary=${1}
  package=${2:-${binary}}
  which ${binary}  >/dev/null || { echo "Install ${package}..."
    case "${ID}" in
      redhat|centos) P_INSTALL="yum install -y " ;;
      debian|ubuntu) P_INSTALL="apt install -y " ;;
      gentoo) P_INSTALL="emerge -v ";;
	  *) echo "No distro declared. Please manually install ${package} for ${binary}"
    esac; 
    #P_INSTALL+="--quiet "
    ${P_INSTALL} ${package}
  }
}

join_domain() {
  if [ "$(hostname)" != "dc" ]; then
    echo Leaving currently joined realm...
    realm leave
    echo Discovering DHCP provided realm...
    realm discover ${realm}
    echo Joining ${realm}
    realm join ${realm}
  else
    echo "Not joining DC to itself. Aborting join..."
  fi
}

# Steps
_init() {
  echo "Setting time zone..."
  ln -sf /usr/share/zoneinfo/America/Detroit /etc/localtime
  echo "Loading Translator..."
  gitsource resources/translators/default.sh
  echo "Acquiring domain name, username, and realm..."
  domain=$(echo $realm | cut -d'.' -f1)
  if [[ ! ${user} ]]; then user="shayne"; fi #echo "Run as a sudo'er with a username that has domain auth!"; exit 1; fi
  if [[ ! ${realm} ]]; then echo "The router/DHCP server didn't return useful data!"; exit 1; fi
  echo "Loading global functions..."
  gitsource scripts/profile.d/functions-${domain}.sh
  echo "Preparing host..."
  [[ ${ID} == "gentoo" ]] && sudo emerge --sync; sudo emerge -v pfl || timedatectl set-ntp false
  cat >/etc/sysctl.d/00-noipv6.conf <<EOL
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
EOL
  sysctl -p  
  password=${1}
  service=${2}
  echo ${service}
  echo "Install packages..."
  [ "${ID}" == "gentoo" ] && { echo "Syncing emerge..."; rm "/usr/portage/metadata/timestamp.x"; emerge-webrsync; echo "=sys-auth/realmd-0.16.2 ~amd64" > /etc/portage/package.accept_keywords; eselect profile set default/linux/amd64/17.0; cd; git clone https://anongit.gentoo.org/git/proj/portage.git; sudo eselect python set 1; sudo USE='-filecaps internal-glib' portage/bin/emerge world -NDuv; sudo PYTHON_TARGETS="python2_7" portage/bin/emerge portage -v; }
  [ "${ID}" == "ubuntu" ] && {
    cat >/etc/apt/apt.conf.d/90forceyes << EOL
APT::Get::Assume-Yes "true";
APT::Get::force-yes "true";  
EOL
    sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade;
    sudo dpkg --configure -a --force-confdef,confnew;
    sudo apt update;
    q_install apt-file;
    echo "Updating apt-file cache...";
    sudo apt-file update; 
    echo Completed ubuntu specific configuration;
  }
  [ -e "/etc/yum.repos.d/epel.repo" ] && [ "${ID}" == "centos" ] || ( sudo yum clean all; sudo yum update -y && q_install epel-release )
  [[ ${ID} == "amzl" ]] && [[ -e /etc/yum.repos.d/epel* ]] || sudo amazon-linux-extras install epel -y
  q_install applydeltarpm deltarpm dos2unix realmd
  ${P_INSTALL} nspr yum-utils *bash-complet* kernel-devel dos2unix ntpdate
  ntpdate time.windows.com &
  service dbus restart
  sudo yum clean all
  systemctl restart systemd-logind
  [ "${ID}" == 'gentoo' ] && { echo -e 'y\n' | layman -a sabayon; emerge realmd --quiet; } || { q_install realm realmd; q_install kinit krb5-workstation; }
  echo Hostname: $(hostname | cut -d'.' -f1)
  if [[ "$(hostname | cut -d'.' -f1)" == "dc" ]]; then echo "Refusing to turn a domain controller into a client. Aborting..."; exit; fi
  [ ! ${realm} ] && { echo -n Discovering realm...;realm=$(sudo realm discover | head -n1);echo $realm; }
  [ ! ${realm} ] && { echo -n Reading resolv.conf for realm...;realm=$(grep '^search \|^domain ' /etc/resolv.conf | head -n1 | cut -d' ' -f2); echo $realm; }
  [ ! ${realm} ] && { echo No realm could be discovered. Aborting...; exit; }
  if [ "${password}" ]; then 
    echo "${password}" | kinit "${user}@$(echo ${realm} | awk '{print toupper($0)}')"
  else
    echo "Password not supplied!"
    #kinit "${user}@$(echo ${realm} | awk '{print toupper($0)}')"
  fi
}
_preinstall() {
  echo "Update packager..."
  [[ ${ID} == 'centos' ]] && { 
    echo "Installing CentOS specific packages..."; 
    ${P_INSTALL} deltarpm
    ${P_REMOVE} puppetlabs-release-pc1 puppet-agent
    ${P_INSTALL} tmux yum-utils krb5-workstation presto; 
    echo "http_caching=packages" > /etc/yum/pluginconf.d/prestopatch.conf; 
    yum clean all; 
    yum makecache fast; 
    echo "Remove PackageKit-command-not-found..."; 
    ${P_REMOVE} -y PackageKit-command-not-found;
  }
  
  P_UPDATE; P_UPGRADE
  [[ ${ID} == 'centos' ]] && { yum-complete-transaction --cleanup-only; yum makecache; }

  echo "Installing required packages..."
  ${P_INSTALL} $(sudo realm discover ${realm} | grep 'required-package:' | cut -d':' -f2)

  echo "Update global profile.d script on ${domain}..."
  giturl="https://raw.githubusercontent.com/silverelitez-${domain}/deploy/master/scripts/profile.d/global.sh"
  curl -s ${giturl} > /etc/profile.d/global.sh
  chown root.root /etc/profile.d/global.sh
  chmod a+x /etc/profile.d/global.sh
  sleep 1

  join_domain
}
_configure() {
echo configure; }
_install() {
  echo "Installing services..."
  [[ ${ID} == "centos" ]] && { echo "Installing crontab..."; echo -e "$(crontab -l)\n*/5 * * * * yum makecache --quiet" | sort -u | crontab; }
  echo "Writing sssd.conf..."
  mkdir -p /etc/sssd
  cat >/etc/sssd/sssd.conf << EOL
[sssd]
domains = $realm
config_file_version = 2
services = nss, pam

[domain/$realm]
ad_domain = $realm
krb5_realm = $realm
realmd_tags = manages-system joined-with-samba
cache_credentials = True
id_provider = ad
krb5_store_password_if_offline = True
default_shell = /bin/bash
ldap_id_mapping = True
use_fully_qualified_names = False
fallback_homedir = /home/%u@%d
access_provider = ad
EOL
  echo "Engaging sssd service..."
  case "${ID}" in
    gentoo) rc-update add sssd default; /etc/init.d/sssd restart;;
    debian|centos|ubuntu) systemctl enable sssd; systemctl restart sssd;;
  esac
}
_postinstall() { 
  mkdir -p /etc/silverelitez
  [ ${ID} == 'ubuntu' ] && {
    echo "Tidy up!"
    sudo dpkg --configure -a --force-confdef,confnew;
    sudo apt-get autoremove -y
  }
  echo "Testing domain..."
  id ${user}@${realm} && echo "Domain joined!" || echo exit 1
}
